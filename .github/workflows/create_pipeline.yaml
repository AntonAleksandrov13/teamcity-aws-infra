name: Deployment Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - pull_request
      - main
jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      # Step 1
      - uses: actions/checkout@v2
      # Step 2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.8
      # Step 3
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      # Step 4
      - name: Create symlinks global
        id: symlinks_global
        run: chmod +x ./create_symlinks.sh && ./create_symlinks.sh test global
      # Step 5
      - name: Terraform init global
        id: init_global
        run: chmod +x ./init.sh && ./init.sh test global
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      # Step 6
      - name: Terraform validate global
        id: validate_global
        run: chmod +x ./validate.sh && ./validate.sh test global
      # Step 7
      - name: Terraform plan global
        id: plan_global
        run: chmod +x ./plan.sh && ./plan.sh test global
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      # Step 8
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs_global.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            ## Global infra report
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init_global.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan_global.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate_global.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      # Step 9
      - name: Create symlinks tenantone
        id: symlinks_tenantone
        run: chmod +x ./create_symlinks.sh && ./create_symlinks.sh test tenantone
      # Step 10
      - name: Terraform init tenantone
        id: init_tenantone
        run: chmod +x ./init.sh && ./init.sh test tenantone
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      # Step 11
      - name: Terraform validate tenantone
        id: validate_tenantone
        run: chmod +x ./validate.sh && ./validate.sh test tenantone
      # Step 12
      - name: Terraform plan tenantone
        id: plan_tenantone
        run: chmod +x ./plan.sh && ./plan.sh test tenantone
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      # Step 12
      - name: Update Pull Request
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs_tenantone.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `
            ## Tenantone infra report
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init_tenantone.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan_tenantone.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate_tenantone.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      # Step 14
      - name: Terraform plan global status
        if: steps.plan_global.outcome == 'failure'
        run: exit 1
      # Step 15
      - name: Terraform plan tenantone status
        if: steps.plan_tenatone.outcome == 'failure'
        run: exit 1
      # Step 16
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: chmod +x ./apply.sh && ./apply.sh test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
